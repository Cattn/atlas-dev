---
import Base from '../layouts/base.astro'
import * as Icons from 'lucide-solid'

export const prerender = false
---

<Base>
  <script src="https://unpkg.com/@mercuryworkshop/epoxy-transport@2.0.0/dist/index.js" is:inline></script>

  <div class="h-screen">
    <iframe id="frame" class="h-full w-full"></iframe>
  </div>


  <div class="absolute left-1/2 bottom-4 -translate-x-1/2 join rounded-btn bg-base-200" transition:name="control">
    <button class="btn btn-square join-item" onclick="if (window.history.canGoBack) {window.history.back()}">
      <Icons.ChevronLeft class="h-5 w-5" />
    </button>

    <button class="btn btn-square join-item" onclick="frame.contentWindow.location.reload()">
      <Icons.RotateCw class="h-5 w-5" />
    </button>

    <input transition:persist="input" type="text" class="input bg-base-200 focus:border-none focus:outline-none w-96 join-item" />

    <button class="btn btn-square join-item" onclick="const frame = document.getElementById('frame'); window.open(frame.src)">
      <Icons.ArrowUpRightFromSquare class="h-5 w-5" />
    </button>

    <a href="/">
      <button class="btn btn-square join-item">
        <Icons.Home class="h-5 w-5" />
      </button>
    </a>
  </div>
</Base>

<script>
  import { navigate } from 'astro:transitions/client'
  import { clearRegistrations, registerSW } from '../lib/sw.ts'
  // @ts-ignore
  import { SetTransport } from "@mercuryworkshop/bare-mux"
  import { encodeXor, formatQuery } from "../lib/formatQuery"

  document.addEventListener('astro:page-load', async () => {
    if (!window.location.href.includes('/route')) return
    const frame: any = document.getElementById('frame')
    const input = document.querySelector('input')
    if (!input.value) return navigate('/')

    const preurl = formatQuery(input.value)
    const url = `${window.location.origin}/cdn-cgi/${encodeXor(preurl)}`
    console.log(input.value)
    input.blur()

    if ('serviceWorker' in navigator) {
      await clearRegistrations()
      await registerSW()
      SetTransport('EpxMod.EpoxyClient', { wisp: `${window.location.origin.replace(/^https?:\/\//, 'ws://')}/wisp/` })

      frame.src = url
    }
  })
</script>
